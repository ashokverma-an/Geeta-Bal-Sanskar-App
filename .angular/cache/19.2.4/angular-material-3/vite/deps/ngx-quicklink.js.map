{
  "version": 3,
  "sources": ["../../../../../../node_modules/ngx-quicklink/fesm2022/ngx-quicklink.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Directive, Inject, Optional, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { PRIMARY_OUTLET } from '@angular/router';\nimport { EMPTY } from 'rxjs';\n\n// Using a global registry so we can keep it populated across lazy-loaded\n// modules with different parent injectors which create instance of the registry.\nconst globalRegistry = [];\nclass PrefetchRegistry {\n  constructor(router) {\n    this.router = router;\n    this.trees = globalRegistry;\n  }\n  add(tree) {\n    this.trees.push(tree);\n  }\n  shouldPrefetch(url) {\n    const tree = this.router.parseUrl(url);\n    return this.trees.some(containsTree.bind(null, tree));\n  }\n  static {\n    this.ɵfac = function PrefetchRegistry_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PrefetchRegistry)(i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PrefetchRegistry,\n      factory: PrefetchRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PrefetchRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Router\n  }], null);\n})();\nfunction containsQueryParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => containee[key] === container[key]);\n}\nfunction containsTree(containee, container) {\n  return containsQueryParams(container.queryParams, containee.queryParams) && containsSegmentGroup(container.root, containee.root, containee.root.segments);\n}\nfunction containsSegmentGroup(container, containee, containeePaths) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!containee.hasChildren()) return true;\n    for (const c in containee.children) {\n      if (!container.children[c]) break;\n      if (containsSegmentGroup(container.children[c], containee.children[c], containee.children[c].segments)) return true;\n    }\n    return false;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroup(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path || a.path.startsWith(':') || bs[i].path.startsWith(':'));\n}\nconst requestIdleCallback = typeof window !== 'undefined' ? window.requestIdleCallback || function (cb) {\n  const start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function () {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n} : () => {};\nconst observerSupported = () => typeof window !== 'undefined' ? !!window.IntersectionObserver : false;\nconst LinkHandler = new InjectionToken('LinkHandler');\nclass ObservableLinkHandler {\n  constructor(loader, registry, ngZone) {\n    this.loader = loader;\n    this.registry = registry;\n    this.ngZone = ngZone;\n    this.elementLink = new Map();\n    this.observer = observerSupported() ? new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (!this.observer) {\n          return;\n        }\n        if (entry.isIntersecting) {\n          const link = entry.target;\n          const routerLink = this.elementLink.get(link);\n          if (!routerLink || !routerLink.urlTree) return;\n          this.registry.add(routerLink.urlTree);\n          this.observer.unobserve(link);\n          requestIdleCallback(() => {\n            this.loader.preload().subscribe(() => void 0);\n          });\n        }\n      });\n    }) : null;\n  }\n  register(el) {\n    this.elementLink.set(el.element, el);\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.observer) {\n        return;\n      }\n      this.observer.observe(el.element);\n    });\n  }\n  // First call to unregister will not hit this.\n  unregister(el) {\n    if (!this.observer) {\n      return;\n    }\n    if (this.elementLink.has(el.element)) {\n      this.observer.unobserve(el.element);\n      this.elementLink.delete(el.element);\n    }\n  }\n  supported() {\n    return observerSupported();\n  }\n  static {\n    this.ɵfac = function ObservableLinkHandler_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ObservableLinkHandler)(i0.ɵɵinject(i1.RouterPreloader), i0.ɵɵinject(PrefetchRegistry), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ObservableLinkHandler,\n      factory: ObservableLinkHandler.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ObservableLinkHandler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.RouterPreloader\n  }, {\n    type: PrefetchRegistry\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\nclass PreloadLinkHandler {\n  constructor(loader, registry) {\n    this.loader = loader;\n    this.registry = registry;\n  }\n  register(el) {\n    this.registry.add(el.urlTree);\n    requestIdleCallback(() => this.loader.preload().subscribe(() => void 0));\n  }\n  unregister(_) {}\n  supported() {\n    return true;\n  }\n  static {\n    this.ɵfac = function PreloadLinkHandler_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PreloadLinkHandler)(i0.ɵɵinject(i1.RouterPreloader), i0.ɵɵinject(PrefetchRegistry));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PreloadLinkHandler,\n      factory: PreloadLinkHandler.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PreloadLinkHandler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.RouterPreloader\n  }, {\n    type: PrefetchRegistry\n  }], null);\n})();\nclass LinkDirective {\n  constructor(linkHandlers, el, link, linkWithHref) {\n    this.linkHandlers = linkHandlers;\n    this.el = el;\n    this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();\n    this.rl = link || linkWithHref;\n    if (this.element && this.element.setAttribute) {\n      this.element.setAttribute('ngx-ql', '');\n    }\n  }\n  ngOnChanges(c) {\n    if (c['routerLink'] && this.linkHandler) {\n      this.linkHandler.unregister(this);\n      this.linkHandler.register(this);\n    }\n  }\n  ngOnDestroy() {\n    if (!this.linkHandler) {\n      return;\n    }\n    this.linkHandler.unregister(this);\n  }\n  get element() {\n    return this.el.nativeElement;\n  }\n  get urlTree() {\n    return this.rl.urlTree;\n  }\n  static {\n    this.ɵfac = function LinkDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LinkDirective)(i0.ɵɵdirectiveInject(LinkHandler), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.RouterLink, 8), i0.ɵɵdirectiveInject(i1.RouterLink, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: LinkDirective,\n      selectors: [[\"\", \"routerLink\", \"\"]],\n      inputs: {\n        routerLink: \"routerLink\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinkDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[routerLink]',\n      standalone: true\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LinkHandler]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.RouterLink,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i1.RouterLink,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    routerLink: [{\n      type: Input\n    }]\n  });\n})();\nconst findPath = (config, route) => {\n  config = config.slice();\n  const parent = new Map();\n  const visited = new Set();\n  while (config.length) {\n    const el = config.shift();\n    if (!el) {\n      continue;\n    }\n    visited.add(el);\n    if (el === route) break;\n    let children = el.children || [];\n    const current = el._loadedRoutes || [];\n    for (const route of current) {\n      if (route && route.children) {\n        children = children.concat(route.children);\n      }\n    }\n    children.forEach(r => {\n      if (visited.has(r)) return;\n      parent.set(r, el);\n      config.push(r);\n    });\n  }\n  let path = '';\n  let current = route;\n  while (current) {\n    if (isPrimaryRoute(current)) {\n      path = `/${current.path}${path}`;\n    } else {\n      path = `/(${current.outlet}:${current.path}${path})`;\n    }\n    current = parent.get(current);\n  }\n  // For routes with empty paths (the resulted string will look like `///section/sub-section`)\n  return path.replace(/[\\/]+/, '/');\n};\nfunction isPrimaryRoute(route) {\n  return route.outlet === PRIMARY_OUTLET || !route.outlet;\n}\nclass QuicklinkStrategy {\n  constructor(registry, router) {\n    this.registry = registry;\n    this.router = router;\n    this.loading = new Set();\n  }\n  preload(route, load) {\n    if (this.loading.has(route)) {\n      // Don't preload the same route twice\n      return EMPTY;\n    }\n    const conn = typeof navigator !== 'undefined' ? navigator.connection : undefined;\n    if (conn) {\n      // Don't preload if the user is on 2G. or if Save-Data is enabled..\n      if ((conn.effectiveType || '').includes('2g') || conn.saveData) return EMPTY;\n    }\n    // Prevent from preloading\n    if (route.data && route.data['preload'] === false) {\n      return EMPTY;\n    }\n    const fullPath = findPath(this.router.config, route);\n    if (this.registry.shouldPrefetch(fullPath)) {\n      this.loading.add(route);\n      return load();\n    }\n    return EMPTY;\n  }\n  static {\n    this.ɵfac = function QuicklinkStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || QuicklinkStrategy)(i0.ɵɵinject(PrefetchRegistry), i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: QuicklinkStrategy,\n      factory: QuicklinkStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuicklinkStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: PrefetchRegistry\n  }, {\n    type: i1.Router\n  }], null);\n})();\nconst quicklinkProviders = [{\n  provide: LinkHandler,\n  useClass: ObservableLinkHandler,\n  multi: true\n}, {\n  provide: LinkHandler,\n  useClass: PreloadLinkHandler,\n  multi: true\n}, PrefetchRegistry, QuicklinkStrategy];\nclass QuicklinkModule {\n  static {\n    this.ɵfac = function QuicklinkModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || QuicklinkModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: QuicklinkModule,\n      imports: [LinkDirective],\n      exports: [LinkDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: quicklinkProviders\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuicklinkModule, [{\n    type: NgModule,\n    args: [{\n      imports: [LinkDirective],\n      exports: [LinkDirective],\n      providers: quicklinkProviders\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-quicklink\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LinkDirective as QuicklinkDirective, QuicklinkModule, QuicklinkStrategy, quicklinkProviders };\n"],
  "mappings": "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",
  "names": ["current", "route"]
}

import { NgModule } from '@angular/core';
import { ObservableLinkHandler, PreloadLinkHandler, LinkHandler, } from './link-handler.service';
import { LinkDirective } from './link.directive';
import { PrefetchRegistry } from './prefetch-registry.service';
import { QuicklinkStrategy } from './quicklink-strategy.service';
import * as i0 from "@angular/core";
export const quicklinkProviders = [
    {
        provide: LinkHandler,
        useClass: ObservableLinkHandler,
        multi: true,
    },
    {
        provide: LinkHandler,
        useClass: PreloadLinkHandler,
        multi: true,
    },
    PrefetchRegistry,
    QuicklinkStrategy,
];
export class QuicklinkModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: QuicklinkModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.0", ngImport: i0, type: QuicklinkModule, imports: [LinkDirective], exports: [LinkDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: QuicklinkModule, providers: quicklinkProviders }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: QuicklinkModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [LinkDirective],
                    exports: [LinkDirective],
                    providers: quicklinkProviders,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpY2tsaW5rLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1xdWlja2xpbmsvc3JjL2xpYi9xdWlja2xpbmsubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixrQkFBa0IsRUFDbEIsV0FBVyxHQUNaLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUVqRSxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRztJQUNoQztRQUNFLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLFFBQVEsRUFBRSxxQkFBcUI7UUFDL0IsS0FBSyxFQUFFLElBQUk7S0FDWjtJQUNEO1FBQ0UsT0FBTyxFQUFFLFdBQVc7UUFDcEIsUUFBUSxFQUFFLGtCQUFrQjtRQUM1QixLQUFLLEVBQUUsSUFBSTtLQUNaO0lBQ0QsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtDQUNsQixDQUFDO0FBT0YsTUFBTSxPQUFPLGVBQWU7OEdBQWYsZUFBZTsrR0FBZixlQUFlLFlBSmhCLGFBQWEsYUFDYixhQUFhOytHQUdaLGVBQWUsYUFGZixrQkFBa0I7OzJGQUVsQixlQUFlO2tCQUwzQixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDeEIsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDO29CQUN4QixTQUFTLEVBQUUsa0JBQWtCO2lCQUM5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBPYnNlcnZhYmxlTGlua0hhbmRsZXIsXG4gIFByZWxvYWRMaW5rSGFuZGxlcixcbiAgTGlua0hhbmRsZXIsXG59IGZyb20gJy4vbGluay1oYW5kbGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTGlua0RpcmVjdGl2ZSB9IGZyb20gJy4vbGluay5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUHJlZmV0Y2hSZWdpc3RyeSB9IGZyb20gJy4vcHJlZmV0Y2gtcmVnaXN0cnkuc2VydmljZSc7XG5pbXBvcnQgeyBRdWlja2xpbmtTdHJhdGVneSB9IGZyb20gJy4vcXVpY2tsaW5rLXN0cmF0ZWd5LnNlcnZpY2UnO1xuXG5leHBvcnQgY29uc3QgcXVpY2tsaW5rUHJvdmlkZXJzID0gW1xuICB7XG4gICAgcHJvdmlkZTogTGlua0hhbmRsZXIsXG4gICAgdXNlQ2xhc3M6IE9ic2VydmFibGVMaW5rSGFuZGxlcixcbiAgICBtdWx0aTogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IExpbmtIYW5kbGVyLFxuICAgIHVzZUNsYXNzOiBQcmVsb2FkTGlua0hhbmRsZXIsXG4gICAgbXVsdGk6IHRydWUsXG4gIH0sXG4gIFByZWZldGNoUmVnaXN0cnksXG4gIFF1aWNrbGlua1N0cmF0ZWd5LFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0xpbmtEaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbTGlua0RpcmVjdGl2ZV0sXG4gIHByb3ZpZGVyczogcXVpY2tsaW5rUHJvdmlkZXJzLFxufSlcbmV4cG9ydCBjbGFzcyBRdWlja2xpbmtNb2R1bGUge31cbiJdfQ==